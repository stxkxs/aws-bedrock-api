receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

extensions:
  basicauth/grafana_cloud:
    client_auth:
      username: "${env:GRAFANA_CLOUD_INSTANCE_ID}"
      password: "${env:GRAFANA_CLOUD_API_KEY}"

processors:
  batch:
    timeout: 1s
    send_batch_size: 1024
  memory_limiter:
    check_interval: 1s
    limit_mib: 1000
    spike_limit_mib: 200
  resource:
    attributes:
      - key: deployment.environment
        value: local
        action: upsert

exporters:
  debug:
    verbosity: 1

  otlphttp/traces:
    endpoint: "${env:GRAFANA_CLOUD_OTLP_ENDPOINT}"
    auth:
      authenticator: basicauth/grafana_cloud

  otlphttp/metrics:
    endpoint: "${env:GRAFANA_CLOUD_OTLP_ENDPOINT}"
    auth:
      authenticator: basicauth/grafana_cloud

  otlphttp/logs:
    endpoint: "${env:GRAFANA_CLOUD_OTLP_ENDPOINT}"
    auth:
      authenticator: basicauth/grafana_cloud

service:
  extensions: [ basicauth/grafana_cloud ]
  pipelines:
    traces:
      receivers: [ otlp ]
      processors: [ memory_limiter, batch, resource ]
      exporters: [ debug, otlphttp/traces ]

    metrics:
      receivers: [ otlp ]
      processors: [ memory_limiter, batch, resource ]
      exporters: [ debug, otlphttp/metrics ]

    logs:
      receivers: [ otlp ]
      processors: [ memory_limiter, batch, resource ]
      exporters: [ debug, otlphttp/logs ]
